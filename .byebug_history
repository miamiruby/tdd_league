c
@result
c
@result
c
exit
c
@index_num
c
@index_num
exit
c
@index_num
exit
teams[1].count
@index_num
c
@result
exit
@result
exit
fresh_result
@fresh_result
c
exit
row_num
row_number
sorted_teams
c
sorted_teams
exit
teams[1].sort_by{|t| t[:name]}
teams
t
teams_without_index = teams.sort_by{|t| byebug}
teams_without_index = teams.sort_by{|t| t[:name]}
teams
team
exit
index
team_1
teams[1][0]
teams[1]
teams
team1
exit
teams
index
exit
i
exit
i
@grouped_teams
teams
exit
ap @teams.group_by {|x| x[:pts]}
require 'awesome_print'
ap @teams.group_by {|x| x[:pts]}
@teams.group_by {|x| x[:pts]}
@teams.map{|t| t[:pts]}
fresh_result
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
@teams
c
team2_name
team1_name
score2
score1
exit
team2_data
team1_data
score2
score1
exit
@teams
exit
@teams
@tewams
c
team2_data
team2_name
c
team2_name
team1_name
team1_data
exit
team2_data.reverse.drop(1).reverse
team2_data
team2_data.reverse
team2_data.reverse.drop(1).reverse
team2_data.pop
team2_data.push
team2_datateam2_data.push
team2_data
c
team2_data
exit
c
team2_name
c
team2_name
team1_name
exit
team1_data.push.join(' ')
team1_data
team2_data.push.join(' ')
team2_data.push.join
team2_data.push
team2_data
team2_data.count
team2_data
team2_name
c
team2_name
team12_name
team1_name
exit
team2_data
team1_data
exit
@teams
c
exit
@teams
continue
@teams
continue
team1 + team2
team1
score2
score1
continue
t1
t1[:pts] += 3
t1
t1 = @teams.find { |t| t[:name] == team1 }
score2
score1
continue
score2
score1
exit
@teams
exit
@teams
@teamss
@tweams
exit
@teams
exit
@teams
continue
exit
t2
t1
exit
@teams
@tewams
exit
t2
@teams
exit
score1
team1
team12
exit
score2
team2
score1
team1
exit
@teams
exit
@teams
exit
@teams.uniq
@teams
exit
@teams << {name: name}
@teams << {'name' => name}
@teams[key] = 'moo'
key
key = name.downcase.to_sym
@teams[name.downcase.to_sym] = name.downcase
@teams[name.downcase.to_sy] = name.downcase
@teams
exit
name.downcase.to_sym
name.to_sym
@teams[:moo]
@teams
name
exit
@games
exit
options
exit
@games.first
exit
@games.first
@games
exit
@games.count
@games[5]
@games[4]
@games[3]
@games[1]
@games[0]
@games.second
@games.first
@games.fiorst
@games
exit
@games.first
@games
exit
@games
exit
scored_game = Game.new(input)
exit
options[1].split(' ')
options[0].split(' ')
options[0].split(' ').map{|x| x.strip!}
@team1, @score1 = options[0].split(' ').map{|x| x.strip!}
options
continue
exit
scored_game = Game.new(input)
exit
edit
scored_game = Game.new(input)
input
exit
Game.new(input)
input
exit
team1, score = game[0].split(' ')
game[0].split(' ')
